# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy frontend and backend app to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and zip apps from /dist
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          # npm run test --if-present

      - name: Zip artifacts for deployment
        run: |
          echo ${GITHUB_WORKSPACE}
          cd ${GITHUB_WORKSPACE}/dist/apps/data-backend/ && zip ${GITHUB_WORKSPACE}/data-backend-release.zip ./* -r
          cd ${GITHUB_WORKSPACE}/dist/apps/rcmnd-backend/ && zip ${GITHUB_WORKSPACE}/rcmnd-backend-release.zip ./* -r
          cd ${GITHUB_WORKSPACE}/dist/apps/nx-react-nestjs/ && zip ${GITHUB_WORKSPACE}/nx-react-nestjs-release.zip ./* -r

      - name: Upload nx-react-nestjs artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: nx-react-nestjs
          path: nx-react-nestjs-release.zip

      - name: Upload data-backend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: data-backend
          path: data-backend-release.zip

      - name: Upload rcmnd-backend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: rcmnd-backend
          path: rcmnd-backend-release.zip

  deploy-nx-react-nestjs:
    runs-on: ubuntu-latest
    name: Deploy Angular Frontend
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: nx-react-nestjs

      - name: Unzip artifact for deployment
        run: unzip nx-react-nestjs-release.zip

      - name: Deploy to static azure web app
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.REACT_PUBLISHTOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: '/' # App source code path
          api_location: '' # Api source code path - optional
          output_location: 'dist/apps/nx-react-nestjs' # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}

  deploy-data-backend:
    runs-on: ubuntu-latest
    name: Deploy NestJs data-backend backend
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: data-backend

      - name: Unzip artifact for deployment
        run: unzip data-backend-release.zip

      - name: Install dependencies
        run: npm install

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'data-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.NESTJS_PUBLISHPROFILE }}
          package: .


  deploy-rcmnd-backend:
    runs-on: ubuntu-latest
    name: Deploy NestJs rcmnd-backend backend
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: rcmnd-backend

      - name: Unzip artifact for deployment
        run: unzip rcmnd-backend-release.zip

      - name: Install dependencies
        run: npm install

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'rcmnd-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.RCMND_PUBLISHTOKEN }}
          package: .
